from aiogram.types import Message, CallbackQuery
from aiogram import Dispatcher, F
from bot.logger import logger
from aiogram.filters import Command
from bot.filters.access_filter import AccessFilter
import os
import asyncio

# üîÅ –û–±—â–∞—è –ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
async def reboot_system(chat, user_id: str):
    try:
        await chat.answer("üîÅ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞...")
        logger.info(f"üîÅ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}")
        await asyncio.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã —É—Å–ø–µ–ª–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ
        os.system("shutdown /r /t 0")  # Windows: –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏: {e}")
        await chat.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä.")

# üí¨ –ö–æ–º–∞–Ω–¥–∞ /reboot
async def reboot_handler(message: Message):
    user_id = str(message.from_user.id)
    await reboot_system(message, user_id)

# üîò Callback reboot
async def reboot_callback(callback: CallbackQuery):
    user_id = str(callback.from_user.id)
    await reboot_system(callback.message, user_id)
    await callback.answer("‚úÖ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞...")

# üìå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
def register(dp: Dispatcher):
    dp.message.register(reboot_handler, Command("reboot"), AccessFilter())
    dp.callback_query.register(reboot_callback, F.data == "reboot", AccessFilter())
