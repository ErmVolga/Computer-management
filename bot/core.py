from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.types import Message
from aiogram.filters import Command

from bot.config import BOT_TOKEN, ALLOWED_USER_ID
from bot.logger import logger

import os
import importlib

bot = Bot(
    token=BOT_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher()

# üß© –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π
def load_modules(dp: Dispatcher):
    modules_dir = os.path.join(os.path.dirname(__file__), '..', 'modules')

    for filename in os.listdir(modules_dir):
        if filename.endswith(".py") and not filename.startswith("__"):
            module_name = f"modules.{filename[:-3]}"
            try:
                mod = importlib.import_module(module_name)
                if hasattr(mod, "register"):
                    mod.register(dp)
                    logger.info(f"‚úÖ –ú–æ–¥—É–ª—å '{module_name}' –∑–∞–≥—Ä—É–∂–µ–Ω.")
                else:
                    logger.warning(f"‚ö†Ô∏è –ú–æ–¥—É–ª—å '{module_name}' –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏—é register(dp)")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è '{module_name}': {e}")

# üë§ –•–µ–Ω–¥–ª–µ—Ä /start (—Ç–æ–ª—å–∫–æ –¥–ª—è ALLOWED_USER_ID)
async def start_handler(message: Message):
    user_id = str(message.from_user.id)

    if user_id != ALLOWED_USER_ID:
        logger.warning(f"üö´ –ó–∞–ø—Ä–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return

    logger.info(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª /start")
    await message.answer("üëã –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")

dp.message.register(start_handler, Command("start"))

# üöÄ –ó–∞–ø—É—Å–∫
def run_bot():
    import asyncio

    async def main():
        logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        load_modules(dp)
        await dp.start_polling(bot)

    asyncio.run(main())


